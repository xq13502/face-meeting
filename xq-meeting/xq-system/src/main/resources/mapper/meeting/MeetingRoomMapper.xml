<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.system.mapper.meeting.MeetingRoomMapper">

    <resultMap type="MeetingRoom" id="MeetingRoomResult">
        <result property="roomId"    column="room_id"    />
        <result property="roomName"    column="room_name"    />
        <result property="location"    column="location"    />
        <result property="capacity"    column="capacity"    />
        <result property="deptId"    column="dept_id"    />
        <result property="status"    column="status"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"  />
        <result property="updateTime"    column="update_time"    />
        <association property="dept"    javaType="SysDept"         resultMap="deptResult" />
        <collection  property="equipments"   javaType="java.util.List"  resultMap="EquipmentResult" />
    </resultMap>

    <resultMap id="deptResult" type="SysDept">
        <id     property="deptId"    column="dept_id"     />
        <result property="parentId"  column="parent_id"   />
        <result property="deptName"  column="dept_name"   />
        <result property="ancestors" column="ancestors"   />
        <result property="orderNum"  column="order_num"   />
        <result property="leader"    column="leader"      />
        <result property="status"    column="dept_status" />
    </resultMap>

    <resultMap id="EquipmentResult" type="MeetingEquipment">
        <id     property="equipmentId"    column="equipment_id"     />
        <result property="equipmentName"  column="equipment_name"   />
        <result property="modelNumber"  column="model_number"   />
        <result property="status" column="status"   />
        <result property="imagePath"  column="image_path"   />
        <result property="purchaseDate"    column="purchase_date"      />
        <result property="remark"    column="remark" />
    </resultMap>


    <resultMap id="MeetingRoomMeetingRoomEquipmentResult" type="MeetingRoom" extends="MeetingRoomResult">
        <collection property="meetingRoomEquipmentList" ofType="MeetingRoomEquipment" column="room_id" select="selectMeetingRoomEquipmentList" />
    </resultMap>


    <resultMap type="MeetingRoomEquipment" id="MeetingRoomEquipmentResult">
        <result property="roomId"    column="room_id"    />
        <result property="equipmentId"    column="equipment_id"    />
    </resultMap>

    <sql id="selectRoomVo">
        select u.room_id, u.dept_id, u.room_name, u.room_id, u.room_name, u.location, u.capacity, u.dept_id, u.status, u.create_by, u.create_time, u.update_by, u.update_time,
               r.equipment_id, r.equipment_name, r.model_number, r.status, r.image_path, r.purchase_date, r.remark, r.create_by, r.create_time, r.update_by, r.update_time,  r.status as equipment_status
        from meeting_room u
                 inner join meeting_room_equipment re on u.room_id = re.room_id
                 inner join meeting_equipment r on r.equipment_id = re.equipment_id
    </sql>

    <sql id="selectMeetingRoomVo">
        select room_id, room_name, location, capacity, dept_id, status, create_by, create_time, update_by, update_time from meeting_room
    </sql>

    <select id="selectMeetingRoomByRoomId" parameterType="Long" resultMap="MeetingRoomResult">
        <include refid="selectRoomVo"/>
        where u.room_id = #{roomId}
    </select>


    <select id="selectMeetingRoomList" parameterType="MeetingRoom" resultMap="MeetingRoomResult">
        select m.room_id, m.room_name, m.location, m.capacity, m.dept_id, m.status, m.create_by, m.create_time, m.update_by, m.update_time,d.dept_name,d.leader
        from meeting_room m left join sys_dept d on m.dept_id = d.dept_id
        <where>
            <if test="roomName != null  and roomName != ''"> and room_name like concat('%', #{roomName}, '%')</if>
            <if test="location != null  and location != ''"> and location  like concat('%', #{location}, '%')</if>
            <if test="capacity != null "> and capacity = #{capacity}</if>
            <if test="deptId != null "> and m.dept_id = #{deptId}</if>
            <if test="status != null  and status != ''"> and m.status = #{status}</if>
            <if test="deptId != null and deptId != 0">
                AND (m.dept_id = #{deptId} OR m.dept_id IN ( SELECT t.dept_id FROM sys_dept t WHERE find_in_set(#{deptId}, ancestors) ))
            </if>
            <!-- 新增部门名称模糊查询条件 -->
            <if test="deptName != null and deptName != ''">
                AND d.dept_name LIKE concat('%', #{deptName}, '%')
            </if>
        </where>
        order by m.create_time desc
    </select>



    <select id="selectMeetingRoomEquipmentList" resultMap="MeetingRoomEquipmentResult">
        select room_id, equipment_id
        from meeting_room_equipment
        where room_id = #{room_id}
    </select>

    <insert id="insertMeetingRoom" parameterType="MeetingRoom" useGeneratedKeys="true" keyProperty="roomId">
        insert into meeting_room
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="roomName != null and roomName != ''">room_name,</if>
            <if test="location != null">location,</if>
            <if test="capacity != null">capacity,</if>
            <if test="deptId != null">dept_id,</if>
            <if test="status != null">status,</if>
            <if test="createBy != null">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="roomName != null and roomName != ''">#{roomName},</if>
            <if test="location != null">#{location},</if>
            <if test="capacity != null">#{capacity},</if>
            <if test="deptId != null">#{deptId},</if>
            <if test="status != null">#{status},</if>
            <if test="createBy != null">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateMeetingRoom" parameterType="MeetingRoom">
        update meeting_room
        <trim prefix="SET" suffixOverrides=",">
            <if test="roomName != null and roomName != ''">room_name = #{roomName},</if>
            <if test="location != null">location = #{location},</if>
            <if test="capacity != null">capacity = #{capacity},</if>
            <if test="deptId != null">dept_id = #{deptId},</if>
            <if test="status != null">status = #{status},</if>
            <if test="createBy != null">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where room_id = #{roomId}
    </update>

    <delete id="deleteMeetingRoomByRoomId" parameterType="Long">
        delete from meeting_room where room_id = #{roomId}
    </delete>

    <delete id="deleteMeetingRoomByRoomIds" parameterType="String">
        delete from meeting_room where room_id in
        <foreach item="roomId" collection="array" open="(" separator="," close=")">
            #{roomId}
        </foreach>
    </delete>

    <delete id="deleteMeetingRoomEquipmentByRoomIds" parameterType="String">
        delete from meeting_room_equipment where room_id in
        <foreach item="roomId" collection="array" open="(" separator="," close=")">
            #{roomId}
        </foreach>
    </delete>

    <delete id="deleteMeetingRoomEquipmentByRoomId" parameterType="Long">
        delete from meeting_room_equipment where room_id = #{roomId}
    </delete>

    <insert id="batchMeetingRoomEquipment">
        insert into meeting_room_equipment( room_id, equipment_id) values
        <foreach item="item" index="index" collection="list" separator=",">
            ( #{item.roomId}, #{item.equipmentId})
        </foreach>
    </insert>
</mapper>
