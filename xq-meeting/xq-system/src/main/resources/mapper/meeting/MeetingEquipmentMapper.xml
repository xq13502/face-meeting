<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.xq.system.mapper.meeting.MeetingEquipmentMapper">

    <resultMap type="MeetingEquipment" id="MeetingEquipmentResult">
        <result property="equipmentId"    column="equipment_id"    />
        <result property="equipmentName"    column="equipment_name"    />
        <result property="modelNumber"    column="model_number"    />
        <result property="status"    column="status"    />
        <result property="imagePath"    column="image_path"    />
        <result property="purchaseDate"    column="purchase_date"    />
        <result property="remark"    column="remark"    />
        <result property="createBy"    column="create_by"    />
        <result property="createTime"    column="create_time"    />
        <result property="updateBy"    column="update_by"    />
        <result property="updateTime"    column="update_time"    />
    </resultMap>

    <resultMap id="MeetingRoomMeetingRoomEquipmentResult" type="MeetingRoom" extends="MeetingEquipmentResult">
        <collection property="meetingRoomEquipmentList" ofType="MeetingRoomEquipment" column="room_id" select="selectMeetingRoomEquipmentList" />
    </resultMap>


    <resultMap type="MeetingRoomEquipment" id="MeetingRoomEquipmentResult">
        <result property="roomId"    column="room_id"    />
        <result property="equipmentId"    column="equipment_id"    />
    </resultMap>

    <sql id="selectMeetingEquipmentVo">
        select equipment_id, equipment_name, model_number, status, image_path, purchase_date, remark, create_by, create_time, update_by, update_time from meeting_equipment
    </sql>

    <select id="selectMeetingEquipmentList" parameterType="MeetingEquipment" resultMap="MeetingEquipmentResult">
        <include refid="selectMeetingEquipmentVo"/>
        <where>
            <if test="equipmentName != null  and equipmentName != ''"> and equipment_name like concat('%', #{equipmentName}, '%')</if>
            <if test="modelNumber != null  and modelNumber != ''"> and model_number   like concat('%', #{modelNumber}, '%') </if>
            <if test="status != null  and status != ''"> and status = #{status}</if>
            <if test="imagePath != null  and imagePath != ''"> and image_path = #{imagePath}</if>
            <if test="params.beginTime != null and params.beginTime != ''"><!-- 开始时间检索 -->
                AND date_format(purchase_date,'%Y%m%d') &gt;= date_format(#{params.beginTime},'%Y%m%d')
            </if>
            <if test="params.endTime != null and params.endTime != ''"><!-- 结束时间检索 -->
                AND date_format(purchase_date,'%Y%m%d') &lt;= date_format(#{params.endTime},'%Y%m%d')
            </if>
        </where>
    </select>

    <select id="selectMeetingEquipmentByEquipmentId" parameterType="Long" resultMap="MeetingEquipmentResult">
        select equipment_id, equipment_name, model_number, status, image_path, purchase_date, remark, create_by, create_time, update_by, update_time
        from meeting_equipment
        where equipment_id = #{equipmentId}
    </select>



    <insert id="insertMeetingEquipment" parameterType="MeetingEquipment" useGeneratedKeys="true" keyProperty="equipmentId">
        insert into meeting_equipment
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="equipmentName != null and equipmentName != ''">equipment_name,</if>
            <if test="modelNumber != null">model_number,</if>
            <if test="status != null and status != ''">status,</if>
            <if test="imagePath != null">image_path,</if>
            <if test="purchaseDate != null">purchase_date,</if>
            <if test="remark != null">remark,</if>
            <if test="createBy != null and createBy != ''">create_by,</if>
            <if test="createTime != null">create_time,</if>
            <if test="updateBy != null">update_by,</if>
            <if test="updateTime != null">update_time,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="equipmentName != null and equipmentName != ''">#{equipmentName},</if>
            <if test="modelNumber != null">#{modelNumber},</if>
            <if test="status != null and status != ''">#{status},</if>
            <if test="imagePath != null">#{imagePath},</if>
            <if test="purchaseDate != null">#{purchaseDate},</if>
            <if test="remark != null">#{remark},</if>
            <if test="createBy != null and createBy != ''">#{createBy},</if>
            <if test="createTime != null">#{createTime},</if>
            <if test="updateBy != null">#{updateBy},</if>
            <if test="updateTime != null">#{updateTime},</if>
         </trim>
    </insert>

    <update id="updateMeetingEquipment" parameterType="MeetingEquipment">
        update meeting_equipment
        <trim prefix="SET" suffixOverrides=",">
            <if test="equipmentName != null and equipmentName != ''">equipment_name = #{equipmentName},</if>
            <if test="modelNumber != null">model_number = #{modelNumber},</if>
            <if test="status != null and status != ''">status = #{status},</if>
            <if test="imagePath != null">image_path = #{imagePath},</if>
            <if test="purchaseDate != null">purchase_date = #{purchaseDate},</if>
            <if test="remark != null">remark = #{remark},</if>
            <if test="createBy != null and createBy != ''">create_by = #{createBy},</if>
            <if test="createTime != null">create_time = #{createTime},</if>
            <if test="updateBy != null">update_by = #{updateBy},</if>
            <if test="updateTime != null">update_time = #{updateTime},</if>
        </trim>
        where equipment_id = #{equipmentId}
    </update>
    <update id="updateEquipmentStatus" parameterType="MeetingEquipment">
        update meeting_equipment set status = #{status} where equipment_id = #{equipmentId}
    </update>

    <delete id="deleteMeetingEquipmentByEquipmentId" parameterType="Long">
        delete from meeting_equipment where equipment_id = #{equipmentId}
    </delete>

    <delete id="deleteMeetingEquipmentByEquipmentIds" parameterType="String">
        delete from meeting_equipment where equipment_id in
        <foreach item="equipmentId" collection="array" open="(" separator="," close=")">
            #{equipmentId}
        </foreach>
    </delete>

    <delete id="deleteMeetingRoomByRoomIds" parameterType="String">
        delete from meeting_room where room_id in
        <foreach item="roomId" collection="array" open="(" separator="," close=")">
            #{roomId}
        </foreach>
    </delete>




</mapper>
